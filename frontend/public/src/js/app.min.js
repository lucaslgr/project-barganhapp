const BASE_URL="http://localhost/project-barganhapp/frontend/public",API_BASE_URL="http://127.0.0.1/project-barganhapp/backend-api/public",$=document.querySelector.bind(document),$$=document.querySelectorAll.bind(document),PUBLIC_KEY_VAPID="BBiT7Jc-HMy4svIPv2n4-TgJ8AxdQO0kczafH0gcCt3VaH3Cr3Aee4s3mwbcguzrwz_6AJFJY40DG88ivDGqsp4";function showMenuMobile(){$("ul.menu-mobile").classList.toggle("show-menu-mobile")}function registerServiceWorker(){"serviceWorker"in navigator&&navigator.serviceWorker.register("./sw-source.js").then(()=>{console.log("Service Worker registered!")}).catch(e=>{console.log("Service Worker not registered!",e)})}function displayConfirmNotification(){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(e=>{let o={body:"Você se increveu com sucesso para o nosso Serviço de Notificação!",icon:`${BASE_URL}/src/images/icons/app-icon-96x96.png`,image:`${BASE_URL}/src/images/products/product-default.png`,dir:"ltr",lang:"pt-BR",vibrate:[100,50,200],badge:`${BASE_URL}/src/images/icons/app-icon-96x96.png`,tag:"confirm-notification",renotify:!0,actions:[{action:"confirm",title:"Ok",icon:`${BASE_URL}/src/images/icons/app-icon-96x96.png`},{action:"confirm",title:"Cancelar",icon:`${BASE_URL}/src/images/icons/app-icon-96x96.png`}]};e.showNotification("Permissão concedida com sucesso! [from SW]",o)})}function configureWebPushSubscription(){if(!("serviceWorker"in navigator))return;let e;navigator.serviceWorker.ready.then(o=>(e=o,o.pushManager.getSubscription())).then(o=>{if(null===o)return console.log("New Subscription was created!"),e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:urlBase64ToUint8Array(PUBLIC_KEY_VAPID)})}).then(e=>fetch(`${API_BASE_URL}/home/savesubscription`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(e)})).then(e=>{e.OK&&console.log("The subscriptions was sent to DATABASE through the API",e.json()),displayConfirmNotification()}).catch(e=>{console.log("The subscription not sent to DATABASE",e)})}function settingsEventButton2EnableNotifications(){if("Notification"in window&&"serviceWorker"in navigator){$$(".enable-notifications").forEach(e=>{e.style.display="block",e.addEventListener("click",e=>{e.target.style.disabled=!0,Notification.requestPermission(e=>{console.log("User Choice",e),"granted"!==e?console.log("No notification permission granted!"):(console.log("The permission to notifications was accept!"),configureWebPushSubscription())})})})}}window.Promise||(window.Promise=Promise),registerServiceWorker(),settingsEventButton2EnableNotifications();