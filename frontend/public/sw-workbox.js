if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let t=Promise.resolve();return n[e]||(t=new Promise(async t=>{if("document"in self){const n=document.createElement("script");n.src=e,document.head.appendChild(n),n.onload=t}else importScripts(e),t()})),t.then(()=>{if(!n[e])throw new Error(`Module ${e} didnâ€™t register its module`);return n[e]})},t=(t,n)=>{Promise.all(t.map(e)).then(e=>n(1===e.length?e[0]:e))},n={require:Promise.resolve(t)};self.define=(t,s,c)=>{n[t]||(n[t]=Promise.resolve().then(()=>{let n={};const i={uri:location.origin+t.slice(1)};return Promise.all(s.map(t=>{switch(t){case"exports":return n;case"module":return i;default:return e(t)}})).then(e=>{const t=c(...e);return n.default||(n.default=t),n})}))}}define("./sw-workbox.js",[],(function(){"use strict";try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},t=t=>[e.prefix,t,e.suffix].filter(e=>e&&e.length>0).join("-"),n=n=>n||t(e.precache),s=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),""),c=(e,...t)=>{let n=e;return t.length>0&&(n+=" :: "+JSON.stringify(t)),n};class i extends Error{constructor(e,t){super(c(e,t)),this.name=e,this.details=t}}const r=new Set;const o=(e,t)=>e.filter(e=>t in e),a=async({request:e,mode:t,plugins:n=[]})=>{const s=o(n,"cacheKeyWillBeUsed");let c=e;for(const e of s)c=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:c}),"string"==typeof c&&(c=new Request(c));return c},f=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:c=[]})=>{const i=await self.caches.open(e),r=await a({plugins:c,request:t,mode:"read"});let o=await i.match(r,s);for(const t of c)if("cachedResponseWillBeUsed"in t){const c=t.cachedResponseWillBeUsed;o=await c.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:o,request:r})}return o},l=async({cacheName:e,request:t,response:n,event:c,plugins:l=[],matchOptions:u})=>{const d=await a({plugins:l,request:t,mode:"write"});if(!n)throw new i("cache-put-with-no-response",{url:s(d.url)});const p=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let c=t,i=!1;for(const t of s)if("cacheWillUpdate"in t){i=!0;const s=t.cacheWillUpdate;if(c=await s.call(t,{request:e,response:c,event:n}),!c)break}return i||(c=c&&200===c.status?c:void 0),c||null})({event:c,plugins:l,response:n,request:d});if(!p)return;const h=await self.caches.open(e),w=o(l,"cacheDidUpdate"),g=w.length>0?await f({cacheName:e,matchOptions:u,request:d}):null;try{await h.put(d,p)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of r)await e()}(),e}for(const t of w)await t.cacheDidUpdate.call(t,{cacheName:e,event:c,oldResponse:g,newResponse:p,request:d})},u=async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const c=o(s,"fetchDidFail"),r=c.length>0?e.clone():null;try{for(const t of s)if("requestWillFetch"in t){const s=t.requestWillFetch,c=e.clone();e=await s.call(t,{request:c,event:n})}}catch(e){throw new i("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let c;c="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)"fetchDidSucceed"in e&&(c=await e.fetchDidSucceed.call(e,{event:n,request:a,response:c}));return c}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:r.clone(),request:a.clone()});throw e}};let d;async function p(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},c=t?t(s):s,i=function(){if(void 0===d){const e=new Response("");if("body"in e)try{new Response(e.body),d=!0}catch(e){d=!1}d=!1}return d}()?n.body:await n.blob();return new Response(i,c)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function h(e){if(!e)throw new i("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new i("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),c=new URL(n,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:c.href}}class w{constructor(e){this.t=n(e),this.s=new Map,this.i=new Map,this.o=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:s}=h(n),c="string"!=typeof n&&n.revision?"reload":"default";if(this.s.has(s)&&this.s.get(s)!==e)throw new i("add-to-cache-list-conflicting-entries",{firstEntry:this.s.get(s),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.o.has(e)&&this.o.get(e)!==n.integrity)throw new i("add-to-cache-list-conflicting-integrities",{url:s});this.o.set(e,n.integrity)}if(this.s.set(s,e),this.i.set(s,c),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],c=await self.caches.open(this.t),i=await c.keys(),r=new Set(i.map(e=>e.url));for(const[e,t]of this.s)r.has(t)?s.push(e):n.push({cacheKey:t,url:e});const o=n.map(({cacheKey:n,url:s})=>{const c=this.o.get(n),i=this.i.get(s);return this.l({cacheKey:n,cacheMode:i,event:e,integrity:c,plugins:t,url:s})});await Promise.all(o);return{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this.t),t=await e.keys(),n=new Set(this.s.values()),s=[];for(const c of t)n.has(c.url)||(await e.delete(c),s.push(c.url));return{deletedURLs:s}}async l({cacheKey:e,url:t,cacheMode:n,event:s,plugins:c,integrity:r}){const o=new Request(t,{integrity:r,cache:n,credentials:"same-origin"});let a,f=await u({event:s,plugins:c,request:o});for(const e of c||[])"cacheWillUpdate"in e&&(a=e);if(!(a?await a.cacheWillUpdate({event:s,request:o,response:f}):f.status<400))throw new i("bad-precaching-response",{url:t,status:f.status});f.redirected&&(f=await p(f)),await l({event:s,plugins:c,response:f,request:e===t?o:new Request(e),cacheName:this.t,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.s}getCachedURLs(){return[...this.s.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.s.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this.t)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new i("missing-precache-entry",{cacheName:this.t,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new i("non-precached-url",{url:e});const n=this.createHandler(t),s=new Request(e);return()=>n({request:s})}}let g;const b=()=>(g||(g=new w),g);const v=(e,t)=>{const n=b().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:c}={}){const i=new URL(e,location.href);i.hash="",yield i.href;const r=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(i,t);if(yield r.href,n&&r.pathname.endsWith("/")){const e=new URL(r.href);e.pathname+=n,yield e.href}if(s){const e=new URL(r.href);e.pathname+=".html",yield e.href}if(c){const e=c({url:i});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let m=!1;function y(e){m||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:c}={})=>{const i=n();self.addEventListener("fetch",n=>{const r=v(n.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:c});if(!r)return;let o=self.caches.open(i).then(e=>e.match(r)).then(e=>e||fetch(r));n.respondWith(o)})})(e),m=!0)}const R=[],x={get:()=>R,add(e){R.push(...e)}},q=e=>{const t=b(),n=x.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},U=e=>{const t=b();e.waitUntil(t.activate())};var L;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),L={},function(e){b().addToCacheList(e),e.length>0&&(self.addEventListener("install",q),self.addEventListener("activate",U))}([{url:"help.html",revision:"a21a20f45c9cf981ebfb31ee0e32a922"},{url:"index.html",revision:"3d12c949c7d84aab54570f98e69dd1c0"},{url:"manifest.json",revision:"5881d5923a6207d4c20b6e84f1f1d099"},{url:"offline.html",revision:"d3eccc62b18f2329216ed534142b5b74"},{url:"src/css/fontello.css",revision:"7f401ea1843f354ba3f17d0d0675358f"},{url:"src/css/normalize.css",revision:"112272e51c80ffe5bd01becd2ce7d656"},{url:"src/css/style.css",revision:"dc710a4c6658d54a0793d792459d5d78"},{url:"src/font/fontello.eot",revision:"c83cf1cc5935cc05cd223fb88c0e21a7"},{url:"src/font/fontello.svg",revision:"aba6e152f19a6fb2d35a146345ed7caf"},{url:"src/font/fontello.ttf",revision:"3e9022a6c6efba8d1aa084938b41c97c"},{url:"src/font/fontello.woff",revision:"ee2a6d816ed3e69262af4c95c9a6b13c"},{url:"src/font/fontello.woff2",revision:"f917450221a0b2443939a3cd7f226b23"},{url:"src/images/icons/app-icon-144x144.png",revision:"84f2950e78145726f765a2afdd8d0818"},{url:"src/images/icons/app-icon-192x192.png",revision:"ce26bb7cec77aea97727f4c54f0f181a"},{url:"src/images/icons/app-icon-256x256.png",revision:"89b610442cc4bbaa6151f189567275a9"},{url:"src/images/icons/app-icon-384x384.png",revision:"94b9a2d8e7c4b61177457ed375148a9e"},{url:"src/images/icons/app-icon-48x48.png",revision:"d593e26670d56260efad5b9a68c308ca"},{url:"src/images/icons/app-icon-512x512.png",revision:"dc7131b617475a99b07ae6936b47d1a8"},{url:"src/images/icons/app-icon-96x96.png",revision:"0f9dfe5a8baf0fef95ef26187c7de060"},{url:"src/images/icons/apple-icon-114x114.png",revision:"7d980a32fdd701ac1efdd6d497363911"},{url:"src/images/icons/apple-icon-120x120.png",revision:"92f704628f05146b268a3ef6b4e504b3"},{url:"src/images/icons/apple-icon-144x144.png",revision:"3fd60cd1ed6cdcee9b0cc9cc38d16ed3"},{url:"src/images/icons/apple-icon-152x152.png",revision:"f19f417dd56d9a6a85e9abbc2ae01b22"},{url:"src/images/icons/apple-icon-180x180.png",revision:"17616faabf5d6a718bc84dead91ea362"},{url:"src/images/icons/apple-icon-57x57.png",revision:"ecff2eb90b16962d3505191bf85a73cc"},{url:"src/images/icons/apple-icon-60x60.png",revision:"aa8bc6427f0f3468825b96ea7cdc68fb"},{url:"src/images/icons/apple-icon-72x72.png",revision:"3a1ba746383ab816e404972b904c7d38"},{url:"src/images/icons/apple-icon-76x76.png",revision:"957d0c40177037605b8f3524f68a7e9e"},{url:"src/images/logos/logo.png",revision:"f08ce99e959979a88ea35d94230ed3c4"},{url:"src/images/products/product-default.png",revision:"7ac23ef828f433175cbc991502615cfa"},{url:"src/js/app.js",revision:"e336fd79d4d3c680e51d303304b91dd1"},{url:"src/js/feed.js",revision:"bd6b1b98068b5cb147d26152fefdb565"},{url:"src/js/fetch.js",revision:"6b82fbb55ae19be4935964ae8c338e92"},{url:"src/js/helperFunctions.js",revision:"71661473378a80d1a83abe515673fdca"},{url:"src/js/idb.js",revision:"017ced36d82bea1e08b08393361e354d"},{url:"src/js/indexedDB.js",revision:"37113929e75cc379e193e3a40ef179cb"},{url:"src/js/promise.js",revision:"10c2238dcd105eb23f703ee53067417f"},{url:"sw.js",revision:"615e144a2b5c43e0bbd488b4b6f70203"}]),y(L)}));
//# sourceMappingURL=sw-workbox.js.map
