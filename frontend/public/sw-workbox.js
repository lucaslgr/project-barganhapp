if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let t=Promise.resolve();return n[e]||(t=new Promise(async t=>{if("document"in self){const n=document.createElement("script");n.src=e,document.head.appendChild(n),n.onload=t}else importScripts(e),t()})),t.then(()=>{if(!n[e])throw new Error(`Module ${e} didnâ€™t register its module`);return n[e]})},t=(t,n)=>{Promise.all(t.map(e)).then(e=>n(1===e.length?e[0]:e))},n={require:Promise.resolve(t)};self.define=(t,s,r)=>{n[t]||(n[t]=Promise.resolve().then(()=>{let n={};const c={uri:location.origin+t.slice(1)};return Promise.all(s.map(t=>{switch(t){case"exports":return n;case"module":return c;default:return e(t)}})).then(e=>{const t=r(...e);return n.default||(n.default=t),n})}))}}define("./sw-workbox.js",[],(function(){"use strict";try{self["workbox:core:5.1.3"]&&_()}catch(e){}const e={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},t=t=>[e.prefix,t,e.suffix].filter(e=>e&&e.length>0).join("-"),n=n=>n||t(e.precache),s=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),""),r=(e,...t)=>{let n=e;return t.length>0&&(n+=" :: "+JSON.stringify(t)),n};class c extends Error{constructor(e,t){super(r(e,t)),this.name=e,this.details=t}}const i=new Set;const o=(e,t)=>e.filter(e=>t in e),a=async({request:e,mode:t,plugins:n=[]})=>{const s=o(n,"cacheKeyWillBeUsed");let r=e;for(const e of s)r=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},l=async({cacheName:e,request:t,event:n,matchOptions:s,plugins:r=[]})=>{const c=await self.caches.open(e),i=await a({plugins:r,request:t,mode:"read"});let o=await c.match(i,s);for(const t of r)if("cachedResponseWillBeUsed"in t){const r=t.cachedResponseWillBeUsed;o=await r.call(t,{cacheName:e,event:n,matchOptions:s,cachedResponse:o,request:i})}return o},f=async({cacheName:e,request:t,response:n,event:r,plugins:f=[],matchOptions:u})=>{const d=await a({plugins:f,request:t,mode:"write"});if(!n)throw new c("cache-put-with-no-response",{url:s(d.url)});const h=await(async({request:e,response:t,event:n,plugins:s=[]})=>{let r=t,c=!1;for(const t of s)if("cacheWillUpdate"in t){c=!0;const s=t.cacheWillUpdate;if(r=await s.call(t,{request:e,response:r,event:n}),!r)break}return c||(r=r&&200===r.status?r:void 0),r||null})({event:r,plugins:f,response:n,request:d});if(!h)return;const w=await self.caches.open(e),p=o(f,"cacheDidUpdate"),g=p.length>0?await l({cacheName:e,matchOptions:u,request:d}):null;try{await w.put(d,h)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of i)await e()}(),e}for(const t of p)await t.cacheDidUpdate.call(t,{cacheName:e,event:r,oldResponse:g,newResponse:h,request:d})},u=async({request:e,fetchOptions:t,event:n,plugins:s=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const r=o(s,"fetchDidFail"),i=r.length>0?e.clone():null;try{for(const t of s)if("requestWillFetch"in t){const s=t.requestWillFetch,r=e.clone();e=await s.call(t,{request:r,event:n})}}catch(e){throw new c("plugin-error-request-will-fetch",{thrownError:e})}const a=e.clone();try{let r;r="navigate"===e.mode?await fetch(e):await fetch(e,t);for(const e of s)"fetchDidSucceed"in e&&(r=await e.fetchDidSucceed.call(e,{event:n,request:a,response:r}));return r}catch(e){for(const t of r)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:i.clone(),request:a.clone()});throw e}};let d;async function h(e,t){const n=e.clone(),s={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},r=t?t(s):s,c=function(){if(void 0===d){const e=new Response("");if("body"in e)try{new Response(e.body),d=!0}catch(e){d=!1}d=!1}return d}()?n.body:await n.blob();return new Response(c,r)}try{self["workbox:precaching:5.1.3"]&&_()}catch(e){}function w(e){if(!e)throw new c("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:t,url:n}=e;if(!n)throw new c("add-to-cache-list-unexpected-type",{entry:e});if(!t){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const s=new URL(n,location.href),r=new URL(n,location.href);return s.searchParams.set("__WB_REVISION__",t),{cacheKey:s.href,url:r.href}}class p{constructor(e){this.t=n(e),this.s=new Map,this.i=new Map,this.o=new Map}addToCacheList(e){const t=[];for(const n of e){"string"==typeof n?t.push(n):n&&void 0===n.revision&&t.push(n.url);const{cacheKey:e,url:s}=w(n),r="string"!=typeof n&&n.revision?"reload":"default";if(this.s.has(s)&&this.s.get(s)!==e)throw new c("add-to-cache-list-conflicting-entries",{firstEntry:this.s.get(s),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.o.has(e)&&this.o.get(e)!==n.integrity)throw new c("add-to-cache-list-conflicting-integrities",{url:s});this.o.set(e,n.integrity)}if(this.s.set(s,e),this.i.set(s,r),t.length>0){const e=`Workbox is precaching URLs without revision info: ${t.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const n=[],s=[],r=await self.caches.open(this.t),c=await r.keys(),i=new Set(c.map(e=>e.url));for(const[e,t]of this.s)i.has(t)?s.push(e):n.push({cacheKey:t,url:e});const o=n.map(({cacheKey:n,url:s})=>{const r=this.o.get(n),c=this.i.get(s);return this.l({cacheKey:n,cacheMode:c,event:e,integrity:r,plugins:t,url:s})});await Promise.all(o);return{updatedURLs:n.map(e=>e.url),notUpdatedURLs:s}}async activate(){const e=await self.caches.open(this.t),t=await e.keys(),n=new Set(this.s.values()),s=[];for(const r of t)n.has(r.url)||(await e.delete(r),s.push(r.url));return{deletedURLs:s}}async l({cacheKey:e,url:t,cacheMode:n,event:s,plugins:r,integrity:i}){const o=new Request(t,{integrity:i,cache:n,credentials:"same-origin"});let a,l=await u({event:s,plugins:r,request:o});for(const e of r||[])"cacheWillUpdate"in e&&(a=e);if(!(a?await a.cacheWillUpdate({event:s,request:o,response:l}):l.status<400))throw new c("bad-precaching-response",{url:t,status:l.status});l.redirected&&(l=await h(l)),await f({event:s,plugins:r,response:l,request:e===t?o:new Request(e),cacheName:this.t,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.s}getCachedURLs(){return[...this.s.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.s.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n){return(await self.caches.open(this.t)).match(n)}}createHandler(e=!0){return async({request:t})=>{try{const e=await this.matchPrecache(t);if(e)return e;throw new c("missing-precache-entry",{cacheName:this.t,url:t instanceof Request?t.url:t})}catch(n){if(e)return fetch(t);throw n}}}createHandlerBoundToURL(e,t=!0){if(!this.getCacheKeyForURL(e))throw new c("non-precached-url",{url:e});const n=this.createHandler(t),s=new Request(e);return()=>n({request:s})}}let g;const y=()=>(g||(g=new p),g);const v=(e,t)=>{const n=y().getURLsToCacheKeys();for(const s of function*(e,{ignoreURLParametersMatching:t,directoryIndex:n,cleanURLs:s,urlManipulation:r}={}){const c=new URL(e,location.href);c.hash="",yield c.href;const i=function(e,t=[]){for(const n of[...e.searchParams.keys()])t.some(e=>e.test(n))&&e.searchParams.delete(n);return e}(c,t);if(yield i.href,n&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=n,yield e.href}if(s){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(r){const e=r({url:c});for(const t of e)yield t.href}}(e,t)){const e=n.get(s);if(e)return e}};let b=!1;function m(e){b||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:r}={})=>{const c=n();self.addEventListener("fetch",n=>{const i=v(n.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:r});if(!i)return;let o=self.caches.open(c).then(e=>e.match(i)).then(e=>e||fetch(i));n.respondWith(o)})})(e),b=!0)}const R=[],q={get:()=>R,add(e){R.push(...e)}},U=e=>{const t=y(),n=q.get();e.waitUntil(t.install({event:e,plugins:n}).catch(e=>{throw e}))},L=e=>{const t=y();e.waitUntil(t.activate())};var j;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),j={},function(e){y().addToCacheList(e),e.length>0&&(self.addEventListener("install",U),self.addEventListener("activate",L))}([{url:"index.html",revision:"3d12c949c7d84aab54570f98e69dd1c0"},{url:"manifest.json",revision:"5881d5923a6207d4c20b6e84f1f1d099"},{url:"offline.html",revision:"d3eccc62b18f2329216ed534142b5b74"},{url:"src/css/fontello.css",revision:"7f401ea1843f354ba3f17d0d0675358f"},{url:"src/css/normalize.css",revision:"112272e51c80ffe5bd01becd2ce7d656"},{url:"src/css/style.css",revision:"dc710a4c6658d54a0793d792459d5d78"},{url:"src/font/fontello.eot",revision:"c83cf1cc5935cc05cd223fb88c0e21a7"},{url:"src/font/fontello.svg",revision:"aba6e152f19a6fb2d35a146345ed7caf"},{url:"src/font/fontello.ttf",revision:"3e9022a6c6efba8d1aa084938b41c97c"},{url:"src/font/fontello.woff",revision:"ee2a6d816ed3e69262af4c95c9a6b13c"},{url:"src/font/fontello.woff2",revision:"f917450221a0b2443939a3cd7f226b23"},{url:"src/js/app.js",revision:"08ea25a9f76dd5c1bb680d7b51092043"},{url:"src/js/feed.js",revision:"bd6b1b98068b5cb147d26152fefdb565"},{url:"src/js/fetch.js",revision:"6b82fbb55ae19be4935964ae8c338e92"},{url:"src/js/helperFunctions.js",revision:"71661473378a80d1a83abe515673fdca"},{url:"src/js/idb.js",revision:"017ced36d82bea1e08b08393361e354d"},{url:"src/js/indexedDB.js",revision:"37113929e75cc379e193e3a40ef179cb"},{url:"src/js/promise.js",revision:"10c2238dcd105eb23f703ee53067417f"},{url:"sw.js",revision:"615e144a2b5c43e0bbd488b4b6f70203"},{url:"src/images/logos/logo.png",revision:"f08ce99e959979a88ea35d94230ed3c4"},{url:"src/images/products/product-default.png",revision:"7ac23ef828f433175cbc991502615cfa"}]),m(j)}));
//# sourceMappingURL=sw-workbox.js.map
